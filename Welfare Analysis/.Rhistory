par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), ylim = xlim, space=0, horiz=TRUE)
par(mar=c(3,3,1,1))
plot(x,y, ylim=ylim, xlim=xlim)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.8 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.8 * (mean(y) - min(y))/(max(y) - min(y))))
}
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1))
scatterhist = function(x, y, xlab="", ylab="", ylim = NULL, xlim=NULL){
zones=matrix(c(3,2,0,1), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), ylim = xlim, space=0, horiz=TRUE)
par(mar=c(3,3,1,1))
plot(x,y, ylim=ylim, xlim=xlim)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.8 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.8 * (mean(y) - min(y))/(max(y) - min(y))))
}
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1))
scatterhist = function(x, y, xlab="", ylab="", ylim = NULL, xlim=NULL){
zones=matrix(c(2,0,1,3), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), ylim = xlim, space=0, horiz=TRUE)
par(mar=c(3,3,1,1))
plot(x,y, ylim=ylim, xlim=xlim)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.8 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.8 * (mean(y) - min(y))/(max(y) - min(y))))
}
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1))
scatterhist = function(x, y, xlab="", ylab="", ylim = NULL, xlim=NULL){
zones=matrix(c(2,3,0,1), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), ylim = xlim, space=0, horiz=TRUE)
par(mar=c(3,3,1,1))
plot(x,y, ylim=ylim, xlim=xlim)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.8 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.8 * (mean(y) - min(y))/(max(y) - min(y))))
}
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1))
scatterhist = function(x, y, xlab="", ylab="", ylim = NULL, xlim=NULL){
zones=matrix(c(0,3,2,1), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), ylim = xlim, space=0, horiz=TRUE)
par(mar=c(3,3,1,1))
plot(x,y, ylim=ylim, xlim=xlim)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.8 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.8 * (mean(y) - min(y))/(max(y) - min(y))))
}
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1))
scatterhist = function(x, y, xlab="", ylab="", ylim = NULL, xlim=NULL){
zones=matrix(c(1,0,3,2), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), ylim = xlim, space=0, horiz=TRUE)
par(mar=c(3,3,1,1))
plot(x,y, ylim=ylim, xlim=xlim)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.8 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.8 * (mean(y) - min(y))/(max(y) - min(y))))
}
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1))
abline(lm(Pyes$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
title(main="Study1 - pred Welfare")
title(outer="Study1 - pred Welfare")
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1))
abline(lm(Pyes$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
title(outer="Study1 - pred Welfare")
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
title(outer="Study1 - pred Welfare")
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1), xlab = "Image-CI correlation           ", ylab = "Probability of Selection            ")
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1), xlab = "Image-CI correlation           ", ylab = "Probability of Selection       ")
abline(lm(Pyes$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
title(outer="Study1 - pred Welfare")
text(x = -0.1, y = 0.05, labels = paste("r =", cor(t(sinusioudCorsdiff), Pyes$mean)))
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), -2), Pyes$mean)))
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), Pyes$mean), -2)))
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), Pyes$mean), -2)))
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), Pyes$mean), 2)))
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), Pyes$mean), 2)))
title(outer="Study1 - pred Welfare")
scatterhist = function(x, y, xlab="", ylab="", ylim = NULL, xlim=NULL){
zones=matrix(c(1,0,3,2), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), ylim = xlim, space=0, horiz=TRUE)
par(mar=c(3,3,1,1))
plot(x,y, ylim=ylim, xlim=xlim)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.6 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.6 * (mean(y) - min(y))/(max(y) - min(y))))
}
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), Pyes$mean), 2)))
title(outer="Study1 - pred Welfare")
#--------------------
#---- Study 1 -------
#--------------------
welfaredata1 <- read.csv("Study1_ReverseCorrelationDataLongForm_codedmissingvalues.csv")
# Recode responses
# 1 = Positive stim
# 0 = Negative stim
welfaredata1$response <- (welfaredata1$response * 2) - 1
# Indicate repeated trials (pic > 400)
welfaredata1 <- subset(welfaredata1, pic <= 400)
#load the CI and antiCI for the data
CI <- matrix(imager::load.image("./cis/ci_pat3_1.jpg"), nrow=512)
#create a storage variable for the correlation between the
#positive noise stimulus and the CI
poscor <- c()
#create a storage variable for the correlation between the
#negative noise stimulus and the CI
negcor <- c()
pb <- dplyr::progress_estimated(400)
for(i in 0:399){
pb$tick()$print()
pos <- matrix(imager::load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_ori.jpg", i), sep='_')), nrow=512)
neg <- matrix(imager::load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_inv.jpg", i), sep='_')), nrow=512)
poscor <- c(poscor, cor(c(CI), c(pos)))
negcor <- c(negcor, cor(c(CI), c(neg)))
}
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), Pyes$mean), 2)))
title(outer="Study1 - pred Welfare")
stimprams <- stimuli_params$pat3
#group the welfare data by picture ID number. exclude any missing responses.
welfaregroup <- group_by(filter(welfaredata1, response %in% c(-1,1)), pic)
#generate the CI.
avImdiff <- welfaregroup$response %*% do.call(rbind, replicate(121, as.matrix(stimprams), simplify=FALSE))[welfaredata1$response %in% c(-1,1),]
avImdiff <- avImdiff-min(avImdiff)
avImdiff <- avImdiff/max(avImdiff)
avImdiff <- avImdiff*2 -1
sinusioudCorsdiff <- cor(t(avImdiff), t(stimprams))
Pyes <- summarise(welfaregroup, mean = mean(response*0.5+0.5))
cor.test(t(sinusioudCorsdiff), Pyes$mean)
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:plyr", unload=TRUE)
library("imager", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:imager", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(rcicr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(cowplot)
library(psych)
library(jpeg)
load("4138635/R Materials for CIs/kp1_seed_NA_time_Jan_22_2015_12_24.Rdata")
scatterhist = function(x, y, xlab="", ylab="", ylim = NULL, xlim=NULL){
zones=matrix(c(1,0,3,2), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), ylim = xlim, space=0, horiz=TRUE)
par(mar=c(3,3,1,1))
plot(x,y, ylim=ylim, xlim=xlim)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.6 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.6 * (mean(y) - min(y))/(max(y) - min(y))))
}
knitr::opts_chunk$set(echo = TRUE)
library(rcicr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(cowplot)
library(psych)
library(jpeg)
load("4138635/R Materials for CIs/kp1_seed_NA_time_Jan_22_2015_12_24.Rdata")
scatterhist = function(x, y, xlab="", ylab="", ylim = NULL, xlim=NULL){
zones=matrix(c(1,0,3,2), ncol=2, byrow=TRUE)
layout(zones, widths=c(4/5,1/5), heights=c(1/5,4/5))
xhist = hist(x, plot=FALSE)
yhist = hist(y, plot=FALSE)
top = max(c(xhist$counts, yhist$counts))
par(mar=c(0,3,1,1))
barplot(xhist$counts, axes=FALSE, ylim=c(0, top), space=0)
par(mar=c(3,0,1,1))
barplot(yhist$counts, axes=FALSE, xlim=c(0, top), ylim = xlim, space=0, horiz=TRUE)
par(mar=c(3,3,1,1))
plot(x,y, ylim=ylim, xlim=xlim)
par(oma=c(3,3,0,0))
mtext(xlab, side=1, line=1, outer=TRUE, adj=0,
at=.6 * (mean(x) - min(x))/(max(x)-min(x)))
mtext(ylab, side=2, line=1, outer=TRUE, adj=0,
at=(.6 * (mean(y) - min(y))/(max(y) - min(y))))
}
knitr::opts_chunk$set(echo = TRUE)
#--------------------
#---- Study 1 -------
#--------------------
welfaredata1 <- read.csv("Study1_ReverseCorrelationDataLongForm_codedmissingvalues.csv")
# Recode responses
# 1 = Positive stim
# 0 = Negative stim
welfaredata1$response <- (welfaredata1$response * 2) - 1
# Indicate repeated trials (pic > 400)
welfaredata1 <- subset(welfaredata1, pic <= 400)
#load the CI and antiCI for the data
CI <- matrix(imager::load.image("./cis/ci_pat3_1.jpg"), nrow=512)
#create a storage variable for the correlation between the
#positive noise stimulus and the CI
poscor <- c()
#create a storage variable for the correlation between the
#negative noise stimulus and the CI
negcor <- c()
pb <- dplyr::progress_estimated(400)
for(i in 0:399){
pb$tick()$print()
pos <- matrix(imager::load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_ori.jpg", i), sep='_')), nrow=512)
neg <- matrix(imager::load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_inv.jpg", i), sep='_')), nrow=512)
poscor <- c(poscor, cor(c(CI), c(pos)))
negcor <- c(negcor, cor(c(CI), c(neg)))
}
stimprams <- stimuli_params$pat3
#group the welfare data by picture ID number. exclude any missing responses.
welfaregroup <- group_by(filter(welfaredata1, response %in% c(-1,1)), pic)
#generate the CI.
avImdiff <- welfaregroup$response %*% do.call(rbind, replicate(121, as.matrix(stimprams), simplify=FALSE))[welfaredata1$response %in% c(-1,1),]
avImdiff <- avImdiff-min(avImdiff)
avImdiff <- avImdiff/max(avImdiff)
avImdiff <- avImdiff*2 -1
sinusioudCorsdiff <- cor(t(avImdiff), t(stimprams))
Pyes <- summarise(welfaregroup, mean = mean(response*0.5+0.5))
cor.test(t(sinusioudCorsdiff), Pyes$mean)
scatterhist(t(sinusioudCorsdiff), Pyes$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), Pyes$mean), 2)))
title(outer="Study1 - pred Welfare")
#--------------------
#---- Study 1 -------
#--------------------
welfaredata1 <- read.csv("Study1_ReverseCorrelationDataLongForm_codedmissingvalues.csv")
# Recode responses
# 1 = Positive stim
# 0 = Negative stim
welfaredata1$response <- (welfaredata1$response * 2) - 1
# Indicate repeated trials (pic > 400)
welfaredata1 <- subset(welfaredata1, pic <= 400)
#load the CI and antiCI for the data
CI <- matrix(imager::load.image("./cis/Study1_CI.jpg"), nrow=512)
#create a storage variable for the correlation between the
#positive noise stimulus and the CI
poscor <- c()
#create a storage variable for the correlation between the
#negative noise stimulus and the CI
negcor <- c()
for(i in 0:399){
pos <- matrix(imager::load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_ori.jpg", i), sep='_')), nrow=512)
neg <- matrix(imager::load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_inv.jpg", i), sep='_')), nrow=512)
poscor <- c(poscor, cor(c(CI), c(pos)))
negcor <- c(negcor, cor(c(CI), c(neg)))
}
welfaredata2a <- read.csv("Study2_ReverseCorrelations_Welfare_LongForm.csv")
# Recode responses
# 1 = Positive stim
# 0 = Negative stim
welfaredata2a$response <- (welfaredata2a$response * 2) - 1
# Indicate repeated trials (pic > 400)
welfaredata2a <- subset(welfaredata2a, pic <= 400)
CI2a <- matrix(load.image("./cis/Study2_Welfare_CI.jpg"), nrow=512)
antiCI2a <- matrix(load.image("./cis/Study2_Welfare_Anti.jpg"), nrow=512)
poscor2a <- c()
negcor2a <- c()
for(i in 0:399){
pos <- matrix(load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_ori.jpg", i), sep='_')), nrow=512)
neg <- matrix(load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_inv.jpg", i), sep='_')), nrow=512)
poscor2a <- c(poscor2a, cor(c(CI2a), c(pos)))
negcor2a <- c(negcor2a, cor(c(CI2a), c(neg)))
}
welfaredata2a <- read.csv("Study2_ReverseCorrelations_Welfare_LongForm.csv")
# Recode responses
# 1 = Positive stim
# 0 = Negative stim
welfaredata2a$response <- (welfaredata2a$response * 2) - 1
# Indicate repeated trials (pic > 400)
welfaredata2a <- subset(welfaredata2a, pic <= 400)
CI2a <- matrix(imager::load.image("./cis/Study2_Welfare_CI.jpg"), nrow=512)
poscor2a <- c()
negcor2a <- c()
for(i in 0:399){
pos <- matrix(imager::load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_ori.jpg", i), sep='_')), nrow=512)
neg <- matrix(imager::load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_inv.jpg", i), sep='_')), nrow=512)
poscor2a <- c(poscor2a, cor(c(CI2a), c(pos)))
negcor2a <- c(negcor2a, cor(c(CI2a), c(neg)))
}
welfaredata2a <- read.csv("Study2_ReverseCorrelations_Welfare_LongForm.csv")
welfaredata2b <- read.csv("Study2_ReverseCorrelations_NonWelfare_LongForm.csv")
# Recode responses
# 1 = Positive stim
# 0 = Negative stim
welfaredata2a$response <- (welfaredata2a$response * 2) - 1
welfaredata2b$response <- (welfaredata2b$response * 2) - 1
# Indicate repeated trials (pic > 400)
welfaredata2a <- subset(welfaredata2a, pic <= 400)
welfaredata2b <- subset(welfaredata2b, pic <= 400)
CI2a <- matrix(imager::load.image("./cis/Study2_Welfare_CI.jpg"), nrow=512)
CI2b <- matrix(imager::load.image("./cis/Study2_nonWelfare_CI.jpg"), nrow=512)
poscor2a <- c()
negcor2a <- c()
poscor2b <- c()
negcor2b <- c()
for(i in 0:399){
pos <- matrix(imager::load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_ori.jpg", i), sep='_')), nrow=512)
neg <- matrix(imager::load.image(paste("MyGennedStims/kp1_0.994736842105263", sprintf("%05d_inv.jpg", i), sep='_')), nrow=512)
poscor2a <- c(poscor2a, cor(c(CI2a), c(pos)))
negcor2a <- c(negcor2a, cor(c(CI2a), c(neg)))
poscor2b <- c(poscor2b, cor(c(CI2b), c(pos)))
negcor2b <- c(negcor2b, cor(c(CI2b), c(neg)))
}
#group the welfare data by picture ID number. exclude any missing responses.
welfaregroup <- group_by(filter(welfaredata2a, response %in% c(-1,1)), pic)
#generate the CI.
avImdiff <- welfaregroup$response %*% do.call(rbind, replicate(121, as.matrix(stimprams), simplify=FALSE))[welfaredata2a$response %in% c(-1,1),]
avImdiff <- avImdiff-min(avImdiff)
avImdiff <- avImdiff/max(avImdiff)
avImdiff <- avImdiff*2 -1
sinusioudCorsdiff2a <- cor(t(avImdiff), t(stimprams))
Pyes2a <- summarise(welfaregroup, mean = mean(response*0.5+0.5))
cor.test(t(sinusioudCorsdiff2a), Pyes2a$mean)
#group the welfare data by picture ID number. exclude any missing responses.
welfaregroup <- group_by(filter(welfaredata2a, response %in% c(-1,1)), pic)
#generate the CI.
avImdiff <- welfaregroup$response %*% do.call(rbind, replicate(123, as.matrix(stimprams), simplify=FALSE))[welfaredata2a$response %in% c(-1,1),]
avImdiff <- avImdiff-min(avImdiff)
avImdiff <- avImdiff/max(avImdiff)
avImdiff <- avImdiff*2 -1
sinusioudCorsdiff2a <- cor(t(avImdiff), t(stimprams))
Pyes2a <- summarise(welfaregroup, mean = mean(response*0.5+0.5))
cor.test(t(sinusioudCorsdiff2a), Pyes2a$mean)
#group the welfare data by picture ID number. exclude any missing responses.
welfaregroup <- group_by(filter(welfaredata2a, response %in% c(-1,1)), pic)
#generate the CI.
avImdiff <- welfaregroup$response %*% do.call(rbind, replicate(123, as.matrix(stimprams), simplify=FALSE))[welfaredata2a$response %in% c(-1,1),]
avImdiff <- avImdiff-min(avImdiff)
avImdiff <- avImdiff/max(avImdiff)
avImdiff <- avImdiff*2 -1
sinusioudCorsdiff2a <- cor(t(avImdiff), t(stimprams))
Pyes2a <- summarise(welfaregroup, mean = mean(response*0.5+0.5))
cor.test(t(sinusioudCorsdiff2a), Pyes2a$mean)
#group the welfare data by picture ID number. exclude any missing responses.
welfaregroup <- group_by(filter(welfaredata2b, response %in% c(-1,1)), pic)
#generate the CI.
avImdiff <- welfaregroup$response %*% do.call(rbind, replicate(115, as.matrix(stimprams), simplify=FALSE))[welfaredata2b$response %in% c(-1,1),]
avImdiff <- avImdiff-min(avImdiff)
avImdiff <- avImdiff/max(avImdiff)
avImdiff <- avImdiff*2 -1
sinusioudCorsdiff2b <- cor(t(avImdiff), t(stimprams))
Pyes2a <- summarise(welfaregroup, mean = mean(response*0.5+0.5))
cor.test(t(sinusioudCorsdiff2b), Pyes2b$mean)
#group the welfare data by picture ID number. exclude any missing responses.
welfaregroup <- group_by(filter(welfaredata2b, response %in% c(-1,1)), pic)
#generate the CI.
avImdiff <- welfaregroup$response %*% do.call(rbind, replicate(115, as.matrix(stimprams), simplify=FALSE))[welfaredata2b$response %in% c(-1,1),]
avImdiff <- avImdiff-min(avImdiff)
avImdiff <- avImdiff/max(avImdiff)
avImdiff <- avImdiff*2 -1
sinusioudCorsdiff2b <- cor(t(avImdiff), t(stimprams))
Pyes2b <- summarise(welfaregroup, mean = mean(response*0.5+0.5))
cor.test(t(sinusioudCorsdiff2b), Pyes2b$mean)
scatterhist(t(sinusioudCorsdiff2a), Pyes2a$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes2a$mean~t(sinusioudCorsdiff2a)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff2a), Pyes2a$mean), 2)))
title(outer="Study2 - pred Welfare")
#group the welfare data by picture ID number. exclude any missing responses.
welfaregroup <- group_by(filter(welfaredata2a, response %in% c(-1,1)), pic)
#generate the CI.
avImdiff <- welfaregroup$response %*% do.call(rbind, replicate(123, as.matrix(stimprams), simplify=FALSE))[welfaredata2a$response %in% c(-1,1),]
avImdiff <- avImdiff-min(avImdiff)
avImdiff <- avImdiff/max(avImdiff)
avImdiff <- avImdiff*2 -1
sinusioudCorsdiff2a <- cor(t(avImdiff), t(stimprams))
Pyes2a <- summarise(welfaregroup, mean = mean(response*0.5+0.5))
cor.test(t(sinusioudCorsdiff2a), Pyes2a$mean)
scatterhist(t(sinusioudCorsdiff2a), Pyes2a$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes2a$mean~t(sinusioudCorsdiff2a)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff2a), Pyes2a$mean), 2)))
title(outer="Study2 - pred Welfare")
#group the welfare data by picture ID number. exclude any missing responses.
welfaregroup <- group_by(filter(welfaredata2b, response %in% c(-1,1)), pic)
#generate the CI.
avImdiff <- welfaregroup$response %*% do.call(rbind, replicate(115, as.matrix(stimprams), simplify=FALSE))[welfaredata2b$response %in% c(-1,1),]
avImdiff <- avImdiff-min(avImdiff)
avImdiff <- avImdiff/max(avImdiff)
avImdiff <- avImdiff*2 -1
sinusioudCorsdiff2b <- cor(t(avImdiff), t(stimprams))
Pyes2b <- summarise(welfaregroup, mean = mean(response*0.5+0.5))
cor.test(t(sinusioudCorsdiff2b), Pyes2b$mean)
scatterhist
cor.test(t(sinusioudCorsdiff), Pyes2a$mean)
cor.test(t(sinusioudCorsdiff), Pyes2b$mean)
plot(t(sinusioudCorsdiff2b), Pyes2b$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes2b$mean~t(sinusioudCorsdiff2b)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff2b), Pyes2b$mean), 2)))
title(outer="Study2 - pred non-Welfare")
par(mfrow(1,1))
par(mfrow=c(1,1))
plot(t(sinusioudCorsdiff2b), Pyes2b$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes2b$mean~t(sinusioudCorsdiff2b)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff2b), Pyes2b$mean), 2)))
title(outer="Study2 - pred non-Welfare")
dev.off()
plot(t(sinusioudCorsdiff2b), Pyes2b$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes2b$mean~t(sinusioudCorsdiff2b)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff2b), Pyes2b$mean), 2)))
title(outer="Study2 - pred non-Welfare")
plot(t(sinusioudCorsdiff), Pyes2a$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes2a$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), Pyes2a$mean), 2)))
title(outer="Study2 - pred non-Welfare")
plot(t(sinusioudCorsdiff), Pyes2a$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes2a$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), Pyes2a$mean), 2)))
cor.test(t(sinusioudCorsdiff), Pyes2b$mean)
plot(t(sinusioudCorsdiff), Pyes2b$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes2b$mean~t(sinusioudCorsdiff)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff), Pyes2b$mean), 2)))
cor.test(t(sinusioudCorsdiff2a), Pyes2b$mean)
plot(t(sinusioudCorsdiff2a), Pyes2b$mean, ylim = c(0,1), xlab = "Image-CI correlation", ylab = "Probability of Selection")
abline(lm(Pyes2b$mean~t(sinusioudCorsdiff2a)), col='blue')
abline(0.5,0, col='red')
text(x = -0.1, y = 0.05, labels = paste("r =", round(cor(t(sinusioudCorsdiff2a), Pyes2b$mean), 2)))
cor.test(t(sinusioudCorsdiff2b), Pyes$mean))
cor.test(t(sinusioudCorsdiff2b), Pyes$mean)
cor.test(t(sinusioudCorsdiff), Pyes2b$mean)
cor.test(t(sinusioudCorsdiff2a), Pyes$mean)
cor.test(t(sinusioudCorsdiff2b), Pyes$mean)
cor.test(t(sinusioudCorsdiff2b), Pyes2a$mean)
cor.test(t(sinusioudCorsdiff2b)*-1, Pyes2a$mean)
